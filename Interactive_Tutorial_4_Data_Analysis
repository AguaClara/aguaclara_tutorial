{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Interactive-Tutorial-4-Data-Analysis.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AguaClara/team_resources/blob/master/Interactive_Tutorial_4_Data_Analysis.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KP_R73qOIc82"
      },
      "source": [
        "# Interactive Tutorial: Data Analysis in Python\n",
        "\n",
        "Welcome to the interactive tutorial for data analysis! Remember that you can refer to the [Data Analysis in Python](https://aguaclara.github.io/aguaclara_tutorial/python/data-analysis.html) page in the AguaClara tutorial wiki for help.\n",
        "\n",
        "Before you start, you'll need to install the AguaClara Python package.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZI3E9J1TIFxs",
        "outputId": "1653403b-4755-4c47-db70-dfd5d4241a3a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 735
        }
      },
      "source": [
        "!pip install aguaclara"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting aguaclara\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/8d/69/1598366ab497d156f14da854297f57a3df8a72f1fffc73941000506239bb/aguaclara-0.1.16.tar.gz (87kB)\n",
            "\u001b[K     |████████████████████████████████| 92kB 2.5MB/s \n",
            "\u001b[?25hCollecting matplotlib==3.0.3\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/e9/69/f5e05f578585ed9935247be3788b374f90701296a70c8871bcd6d21edb00/matplotlib-3.0.3-cp36-cp36m-manylinux1_x86_64.whl (13.0MB)\n",
            "\u001b[K     |████████████████████████████████| 13.0MB 7.7MB/s \n",
            "\u001b[?25hRequirement already satisfied: urllib3 in /usr/local/lib/python3.6/dist-packages (from aguaclara) (1.24.3)\n",
            "Collecting pint==0.8.1\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/1e/40/6938f7d544eef208a8183c2c80624289e8a4f4e0aea43f4658b9527077de/Pint-0.8.1.tar.gz (162kB)\n",
            "\u001b[K     |████████████████████████████████| 163kB 47.8MB/s \n",
            "\u001b[?25hRequirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (from aguaclara) (0.25.3)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from aguaclara) (1.4.1)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib==3.0.3->aguaclara) (2.4.6)\n",
            "Requirement already satisfied: numpy>=1.10.0 in /usr/local/lib/python3.6/dist-packages (from matplotlib==3.0.3->aguaclara) (1.17.5)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib==3.0.3->aguaclara) (2.6.1)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib==3.0.3->aguaclara) (1.1.0)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib==3.0.3->aguaclara) (0.10.0)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas->aguaclara) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.1->matplotlib==3.0.3->aguaclara) (1.12.0)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from kiwisolver>=1.0.1->matplotlib==3.0.3->aguaclara) (42.0.2)\n",
            "Building wheels for collected packages: aguaclara, pint\n",
            "  Building wheel for aguaclara (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for aguaclara: filename=aguaclara-0.1.16-cp36-none-any.whl size=99641 sha256=975dc0142204652de7335a4bfdabb419f53a1d1cb271bb211b80105669ca8295\n",
            "  Stored in directory: /root/.cache/pip/wheels/4b/05/cb/7fed32189f54fb4ca68d5114698799f11457613b8217ad0ec9\n",
            "  Building wheel for pint (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pint: filename=Pint-0.8.1-py2.py3-none-any.whl size=134155 sha256=eb11b79f5369999d52eba81337e90bfc42f8121bdbdb18fa36f9dc55babe043b\n",
            "  Stored in directory: /root/.cache/pip/wheels/b4/56/36/7c4d6a4e3660e233b95e3b0482551915cb184abca0f93ee1dd\n",
            "Successfully built aguaclara pint\n",
            "\u001b[31mERROR: plotnine 0.6.0 has requirement matplotlib>=3.1.1, but you'll have matplotlib 3.0.3 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: mizani 0.6.0 has requirement matplotlib>=3.1.1, but you'll have matplotlib 3.0.3 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: albumentations 0.1.12 has requirement imgaug<0.2.7,>=0.2.5, but you'll have imgaug 0.2.9 which is incompatible.\u001b[0m\n",
            "Installing collected packages: matplotlib, pint, aguaclara\n",
            "  Found existing installation: matplotlib 3.1.2\n",
            "    Uninstalling matplotlib-3.1.2:\n",
            "      Successfully uninstalled matplotlib-3.1.2\n",
            "Successfully installed aguaclara-0.1.16 matplotlib-3.0.3 pint-0.8.1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "matplotlib",
                  "mpl_toolkits"
                ]
              }
            }
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kW6sGZrwHnkS"
      },
      "source": [
        "### Calculations on Arrays\n",
        "\n",
        "1. Make a NumPy array from the list of numbers called `degrees`. Without using a loop, subtract 5 from every number, convert the differences to radians, and print the result. \n",
        "\n",
        "   *Hint: use a NumPy function for the conversion.*"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gmEv33rHaFVW"
      },
      "source": [
        "# Import statement here\n",
        "\n",
        "degrees = [35, 50, 65, 95, 140, 185]\n",
        "\n",
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "V3Q7FrT90f7R"
      },
      "source": [
        "2. Use the AguaClara package to apply units of degrees to the list given in #1. Then convert the list to radians without using the NumPy package and print each element.\n",
        "\n",
        "   *Hint: use the `.to()` function. Also, you may want to print inside a loop.*"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2K5AF54I4Af7"
      },
      "source": [
        "# Import statement here\n",
        "\n",
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6sdv2Bt64JE7"
      },
      "source": [
        "3. Write the following table, minus the headers, as a 2-dimensional NumPy array. *Hint: make each element of the array a row.*\n",
        "    \n",
        "    Then, print the array, the dimensions of the array, the 4th row, and the value in the 4th row and 2nd column.\n",
        "\n",
        "| Mass (kg)| Velocity (m/s) |\n",
        "|:-:|:-:|\n",
        "|16|18|\n",
        "|3|39|\n",
        "|88|74|\n",
        "|98|94|\n",
        "|84|82|"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fz1JH_YXLRZh"
      },
      "source": [
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dp4ZaBP-LwAK"
      },
      "source": [
        "4. Make an array that contains the momentum ($p=mv$) associated with the mass and velocity from each row."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9v7K713yuxJe"
      },
      "source": [
        "momentum = # Your answer here\n",
        "\n",
        "print(momentum)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "L9kqChdau3o2"
      },
      "source": [
        "### Pandas\n",
        "\n",
        "5. Use the Pandas package to read the spreadsheet at this URL as a Pandas DataFrame: https://raw.githubusercontent.com/AguaClara/Fluoride-Auto/master/Summer%202019/Data%20and%20Graphs/Molecular%20Ratios.csv. Print the column labels in the DataFrame."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W75g-YarwpKi"
      },
      "source": [
        "# Import statement here\n",
        "\n",
        "data = # Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A7LAYA3xxYug"
      },
      "source": [
        "6. Write 1 way to print the 1st row and 2 ways to print the \"Influent PACl (atoms/L)\" column."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BDdDMjkY8Ran"
      },
      "source": [
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tIscVgF8DZyr"
      },
      "source": [
        "7. Print the values in the first 3 rows and the first 4 columns."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7LWBXGeJDjj7"
      },
      "source": [
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5SLjyLvP8Tvm"
      },
      "source": [
        "### Matplotlib\n",
        "\n",
        "8. Continuing to use the data from the Pandas section, plot the \"Effluent Fluoride (mg/L)\" column against the \"Influent Fluoride (mg/L)\" column for rows 11-18. Add x- and y-axis labels.\n",
        "\n",
        "   Is the data continous or discrete, and how should that affect the plot?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SayrncwKHKLQ"
      },
      "source": [
        "# Import statement here\n",
        "\n",
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WYJyZprmHRBx"
      },
      "source": [
        "9. Notice that rows 11-18 have the same value for \"Influent PACL (mg/L)\". Make another plot for \"Effluent Fluoride (mg/L)\" vs. \"Influent Fluoride (mg/L)\" for at least three rows with 40 mg/L of influent PACl."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2ITnV7H4H-JG"
      },
      "source": [
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Rc31eiV0IEHX"
      },
      "source": [
        "10. Plot the sets of data from #8 and #9 in the same figure, but give the two plots different colors and/or data symbols, as well as a legend."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S8rRNGXUIKaV"
      },
      "source": [
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tgR6xpQCMZEF"
      },
      "source": [
        "### AguaClara Package\n",
        "\n",
        "11. Use two functions from the AguaClara Python package to get the 1000-4000<sup>th</sup> rows of the \"Turb_settled ()\" column and the time column from the data at https://raw.githubusercontent.com/AguaClara/aguaclara_tutorial/master/data/plantita%208-12-2019.tsv. Plot the \"Turb_settled ()\" column against the time column for these rows."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5B-iBS27k0kJ"
      },
      "source": [
        "# Import statement here\n",
        "\n",
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_4SZirzKk3s1"
      },
      "source": [
        "12. Pick a function from the AguaClara package to plot the entire \"Turb_settled ()\" and \"Turb_filter ()\" columns against the entire time column. Add axis labels."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uJL2cZD4-W4D"
      },
      "source": [
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_fb_aNJ9-nOT"
      },
      "source": [
        "13. Use a function from AguaClara package to print out all the experimental notes inserted into the data file."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A6rEcQYs--Pb"
      },
      "source": [
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zseKZlxO_HoF"
      },
      "source": [
        "### Curve Fitting\n",
        "\n",
        "14. Use the SciPy package to fit a linear model to \"Turb_settled ()\" column for rows 3200-5000. What is are the slope and intercept? Is the model a good fit?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gbr0sL0hGIkM"
      },
      "source": [
        "# Import statement here\n",
        "\n",
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uHwSLgOoGMLl"
      },
      "source": [
        "15. Use another feature of the SciPy package to find a better fit to the data in the given rows. *Hint: try a quadratic fit.*\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uOJMwNS52iTa"
      },
      "source": [
        "# Import statement here\n",
        "\n",
        "# Your answer here"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
